name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main, master, react/migrate ]
  pull_request:
    branches: [ main, master ]
    types: [ opened, synchronize, reopened, closed ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    steps:
      - name: Debug event information
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Event action: ${{ github.event.action }}"
          echo "Ref: ${{ github.ref }}"
          echo "PR number: ${{ github.event.number }}"
        
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        env:
          NODE_ENV: production
          # Set base path for PR previews  
          VITE_BASE_PATH: ${{ github.event_name == 'pull_request' && format('/pr-{0}', github.event.number) || '/' }}
        
      - name: Copy 404.html for GitHub Pages SPA support
        run: cp public/404.html dist/404.html
        
      - name: Add .nojekyll file
        run: touch dist/.nojekyll
        
      - name: Remove CNAME for PR previews (to avoid custom domain conflicts)
        if: github.event_name == 'pull_request'
        run: rm -f dist/CNAME
        
      - name: List build output
        run: ls -la dist/
        
      - name: Debug build configuration
        run: |
          echo "Base path used: ${{ github.event_name == 'pull_request' && format('/pr-{0}', github.event.number) || '/' }}"
          echo "Contents of dist/index.html:"
          head -20 dist/index.html || echo "index.html not found"
        
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: ./dist

  # Production deployment job
  deploy-production:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist
          
      - name: Deploy to Production
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: master
          cname: krishnapaul.in
          enable_jekyll: false

  # PR preview deployment job
  deploy-preview:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Debug PR information
        run: |
          echo "PR number: ${{ github.event.number }}"
          echo "Event action: ${{ github.event.action }}"
          echo "Base ref: ${{ github.base_ref }}"
          echo "Head ref: ${{ github.head_ref }}"
        
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist
          
      - name: Debug - List downloaded files
        run: |
          echo "Contents of ./dist:"
          ls -la ./dist/
          echo "Checking for index.html:"
          test -f ./dist/index.html && echo "index.html exists" || echo "index.html missing"
          
      - name: Deploy PR Preview
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: master
          destination_dir: pr-${{ github.event.number }}
          keep_files: true
          enable_jekyll: false
          exclude_assets: '.github'
          
      - name: Verify deployment
        run: |
          echo "Deployment should be available at: https://krishnapaul242.github.io/pr-${{ github.event.number }}/"
          echo "Checking if files were deployed correctly..."
          sleep 10
          
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const previewUrl = `https://krishnapaul242.github.io/pr-${prNumber}/`;
            
            // Check if comment already exists
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('🚀 Preview deployed!')
            );
            
            const commentBody = `🚀 Preview deployed! 
            
            **View your changes:** ${previewUrl}
            
            📝 **Note:** It may take 1-2 minutes for the preview to be available after deployment.
            
            🔧 **Troubleshooting:** If you see a 404 error, try refreshing the page after a few seconds.
            
            This preview will be updated automatically when you push new commits to this PR.`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }

  # Cleanup job when PR is closed
  cleanup-preview:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create empty directory
        run: mkdir empty
        
      - name: Cleanup PR Preview
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./empty
          publish_branch: master
          destination_dir: pr-${{ github.event.number }}
          keep_files: false
